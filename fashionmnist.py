# -*- coding: utf-8 -*-
"""FashionMnist.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ANYdXMapABQ1oZ6ZM91oDLLDV7wX_-N9
"""

import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import cv2
from google.colab.patches import cv2_imshow
from PIL import Image
import tensorflow as tf
tf.random.set_seed(3)
from tensorflow import keras
from keras.datasets import fashion_mnist
from tensorflow.math import confusion_matrix

(X_train,Y_train),(X_test,Y_test)=fashion_mnist.load_data()

print(X_train.shape)
print(Y_train.shape)
print(X_test.shape)
print(Y_test.shape)

plt.imshow(X_train[3])
print(Y_train[3])

X_train=X_train/255
X_test=X_test/255

model=keras.Sequential([
    keras.layers.Flatten(input_shape=(28,28)),
    keras.layers.Dense(50,activation='relu'),
    keras.layers.Dense(50,activation='relu'),
    keras.layers.Dense(10,activation='softmax')
])

model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',  # Changed to sparse_categorical_crossentropy
              metrics=['accuracy'])

model.fit(X_train,Y_train,epochs=5)

path=input('provide path:')
img=cv2.imread(path)
cv2_imshow(img)
grayscale = cv2.cvtColor(img, cv2.COLOR_RGB2GRAY)

imgg = cv2.resize(grayscale, (28, 28))
imgg=imgg/255
image_reshaped = np.reshape(imgg, [1,28,28])

input_prediction = model.predict(image_reshaped)

input_pred_label = np.argmax(input_prediction)
class_labels = [
    "T-shirt/top", "Trouser", "Pullover", "Dress", "Coat",
    "Sandal", "Shirt", "Sneaker", "Bag", "Ankle boot"
]


print('The Dress is recognized as ', class_labels[input_pred_label])